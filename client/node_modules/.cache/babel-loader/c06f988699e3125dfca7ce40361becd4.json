{"ast":null,"code":"import _toConsumableArray from \"/Users/mitchell/Documents/GitHub/GroupUs/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux'; //User Reducers\n\nvar currUser = function currUser(action) {\n  if (action.type === 'RECEIVE_USER') {\n    return {\n      user: action.payload\n    };\n  }\n\n  return {\n    user: 'bad'\n  };\n}; //Events Reducers\n\n\nvar events = function events() {\n  var oldListOfEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_EVENT') {\n    return [].concat(_toConsumableArray(oldListOfEvents), [action.payload]);\n  }\n\n  return oldListOfEvents;\n}; //Database Reducers\n\n\nvar database = function database() {\n  var oldListOfDatabases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_DATABASE') {\n    return [].concat(_toConsumableArray(oldListOfDatabases), [action.payload]);\n  }\n\n  return oldListOfDatabases;\n}; //combineReducers\n\n\nexport default combineReducers({\n  currUser: currUser,\n  events: events,\n  databases: database\n});","map":{"version":3,"sources":["/Users/mitchell/Documents/GitHub/GroupUs/client/src/reducers/index.js"],"names":["combineReducers","currUser","action","type","user","payload","events","oldListOfEvents","database","oldListOfDatabases","databases"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAW;AACxB,MAAGA,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,WAAO;AACHC,MAAAA,IAAI,EAAEF,MAAM,CAACG;AADV,KAAP;AAGH;;AACD,SAAO;AAACD,IAAAA,IAAI,EAAE;AAAP,GAAP;AACH,CAPD,C,CASA;;;AACA,IAAME,MAAM,GAAG,SAATA,MAAS,GAAkC;AAAA,MAAjCC,eAAiC,uEAAf,EAAe;AAAA,MAAXL,MAAW;;AAC/C,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,wCAAWI,eAAX,IAA4BL,MAAM,CAACG,OAAnC;AACH;;AACD,SAAOE,eAAP;AACD,CALD,C,CAOA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAqC;AAAA,MAApCC,kBAAoC,uEAAf,EAAe;AAAA,MAAXP,MAAW;;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,wCAAWM,kBAAX,IAA+BP,MAAM,CAACG,OAAtC;AACH;;AACD,SAAOI,kBAAP;AACH,CALD,C,CAOA;;;AACA,eAAeT,eAAe,CAAC;AAC3BC,EAAAA,QAAQ,EAAEA,QADiB;AAE3BK,EAAAA,MAAM,EAAEA,MAFmB;AAG3BI,EAAAA,SAAS,EAAEF;AAHgB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\n//User Reducers\nconst currUser = (action) =>{\n    if(action.type === 'RECEIVE_USER'){\n        return {\n            user: action.payload\n        };\n    }\n    return {user: 'bad'}\n};\n\n//Events Reducers\nconst events = (oldListOfEvents = [], action) => {\n  if(action.type === 'ADD_EVENT'){\n      return [...oldListOfEvents, action.payload];\n  }\n  return oldListOfEvents;\n};\n\n//Database Reducers\nconst database = (oldListOfDatabases = [], action) => {\n    if(action.type === 'ADD_DATABASE'){\n        return [...oldListOfDatabases, action.payload]\n    }\n    return oldListOfDatabases;\n};\n\n//combineReducers\nexport default combineReducers({\n    currUser: currUser,\n    events: events,\n    databases: database\n});\n"]},"metadata":{},"sourceType":"module"}