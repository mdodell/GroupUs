{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\GroupUs\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux'; //User Reducers\n\nvar currUser = function currUser() {\n  var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'RECEIVE_USER') {\n    return {\n      user: action.payload\n    };\n  }\n\n  return {\n    user: 'bad'\n  };\n}; //Events Reducers\n\n\nvar events = function events() {\n  var oldListOfEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_EVENT') {\n    return [].concat(_toConsumableArray(oldListOfEvents), [action.payload]);\n  }\n\n  return oldListOfEvents;\n}; //Database Reducers\n\n\nvar database = function database() {\n  var oldListOfDatabases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_DATABASE') {\n    return [].concat(_toConsumableArray(oldListOfDatabases), [action.payload]);\n  }\n\n  return oldListOfDatabases;\n}; //combineReducers\n\n\nexport default combineReducers({\n  currUser: currUser,\n  events: events,\n  databases: database\n});","map":{"version":3,"sources":["C:\\Users\\Owner\\Documents\\GitHub\\GroupUs\\client\\src\\reducers\\index.js"],"names":["combineReducers","currUser","user","undefined","action","type","payload","events","oldListOfEvents","database","oldListOfDatabases","databases"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA8B;AAAA,MAA7BC,IAA6B,uEAAtBC,SAAsB;AAAA,MAAXC,MAAW;;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,WAAO;AACHH,MAAAA,IAAI,EAAEE,MAAM,CAACE;AADV,KAAP;AAGH;;AACD,SAAO;AAACJ,IAAAA,IAAI,EAAE;AAAP,GAAP;AACH,CAPD,C,CASA;;;AACA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAkC;AAAA,MAAjCC,eAAiC,uEAAf,EAAe;AAAA,MAAXJ,MAAW;;AAC/C,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,wCAAWG,eAAX,IAA4BJ,MAAM,CAACE,OAAnC;AACH;;AACD,SAAOE,eAAP;AACD,CALD,C,CAOA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAqC;AAAA,MAApCC,kBAAoC,uEAAf,EAAe;AAAA,MAAXN,MAAW;;AAClD,MAAGA,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,wCAAWK,kBAAX,IAA+BN,MAAM,CAACE,OAAtC;AACH;;AACD,SAAOI,kBAAP;AACH,CALD,C,CAOA;;;AACA,eAAeV,eAAe,CAAC;AAC3BC,EAAAA,QAAQ,EAAEA,QADiB;AAE3BM,EAAAA,MAAM,EAAEA,MAFmB;AAG3BI,EAAAA,SAAS,EAAEF;AAHgB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n//User Reducers\r\nconst currUser = (user = undefined, action) => {\r\n    if(action.type === 'RECEIVE_USER'){\r\n        return {\r\n            user: action.payload\r\n        };\r\n    }\r\n    return {user: 'bad'}\r\n};\r\n\r\n//Events Reducers\r\nconst events = (oldListOfEvents = [], action) => {\r\n  if(action.type === 'ADD_EVENT'){\r\n      return [...oldListOfEvents, action.payload];\r\n  }\r\n  return oldListOfEvents;\r\n};\r\n\r\n//Database Reducers\r\nconst database = (oldListOfDatabases = [], action) => {\r\n    if(action.type === 'ADD_DATABASE'){\r\n        return [...oldListOfDatabases, action.payload]\r\n    }\r\n    return oldListOfDatabases;\r\n};\r\n\r\n//combineReducers\r\nexport default combineReducers({\r\n    currUser: currUser,\r\n    events: events,\r\n    databases: database\r\n});\r\n"]},"metadata":{},"sourceType":"module"}